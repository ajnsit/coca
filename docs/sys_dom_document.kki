module interface sys/dom/document
/* This module defines standard operations that are always available.

   Some types and operations are required to be defined for the compiler
   to work correctly (i.e. types like `:int` or `:list`)
*/
import std/core = std/core = "";
// Basic types of the HTML5 DOM model
import sys/dom/types = sys/dom/types = "";
// Stateful funs can manipulate heap `:h` using allocations, reads and writes.
private alias std/core/st<(h :: H)> :: H -> E = <(std/core/read :: H -> X)<(h :: H)>,(std/core/write :: H -> X)<(h :: H)>,(std/core/alloc :: H -> X)<(h :: H)>> = 1;
private alias sys/dom/types/dom :: E = <(std/core/exn :: X),(std/core/ndet :: X),(std/core/console :: X),(std/core/net :: X),(std/core/ui :: X),((std/core/st :: H -> E)<(sys/dom/types/hdom :: H)> == 1 <(std/core/read :: H -> X)<(sys/dom/types/hdom :: H)>,(std/core/write :: H -> X)<(sys/dom/types/hdom :: H)>,(std/core/alloc :: H -> X)<(sys/dom/types/hdom :: H)>>)> = 2;
private alias sys/dom/types/float32 = std/core/double = 1;
private alias sys/dom/types/uint16 = std/core/int = 1;
private alias sys/dom/types/uint32 = std/core/int = 1;
/* safe and unsafe conversion from all types including `any */
external maybeDocument : forall<a> (a) -> (std/core/maybe :: V -> V)<sys/dom/types/document> = inline "(#1.toString()==='[object Document]'?std_core.Just(#1):std_core.Nothing)";
external toDocument : forall<a> (a) -> <(std/core/exn :: X)> sys/dom/types/document = inline "(#1.toString()==='[object Document]'?#1:std_core.error('toDocument: cast failed'))";
// Document implements Document (supplemental)
external implementation : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) sys/dom/types/domImplementation = inline "#1.implementation";
external documentUri : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.documentURI";
external documentUri .1 : (this : sys/dom/types/document, assigned : std/core/string) -> (sys/dom/types/dom :: E) () = inline "(#1.documentURI = #2)";
external compatMode : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.compatMode";
external charset : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.charset";
external charset .1 : (this : sys/dom/types/document, assigned : std/core/string) -> (sys/dom/types/dom :: E) () = inline "(#1.charset = #2)";
external characterSet : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.characterSet";
external defaultCharset : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.defaultCharset";
external contentType : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.contentType";
external doctype : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) sys/dom/types/documentType = inline "#1.doctype";
external documentElement : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) sys/dom/types/element = inline "#1.documentElement";
external getElementsByTagName : (this : sys/dom/types/document, qualifiedName : std/core/string) -> (sys/dom/types/dom :: E) sys/dom/types/nodeList = inline "#1.getElementsByTagName(#2)";
external getElementsByTagNameNs : (this : sys/dom/types/document, namespace : std/core/string, localName : std/core/string) -> (sys/dom/types/dom :: E) sys/dom/types/nodeList = inline "#1.getElementsByTagNameNS(#2, #3)";
external getElementsByClassName : (this : sys/dom/types/document, classNames : std/core/string) -> (sys/dom/types/dom :: E) sys/dom/types/nodeList = inline "#1.getElementsByClassName(#2)";
external getElementById : (this : sys/dom/types/document, elementId : std/core/string) -> (sys/dom/types/dom :: E) sys/dom/types/element = inline "#1.getElementById(#2)";
external createElement : (this : sys/dom/types/document, localName : std/core/string) -> (sys/dom/types/dom :: E) sys/dom/types/element = inline "#1.createElement(#2)";
external createElementNs : (this : sys/dom/types/document, namespace : std/core/string, qualifiedName : std/core/string) -> (sys/dom/types/dom :: E) sys/dom/types/element = inline "#1.createElementNS(#2, #3)";
external createDocumentFragment : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) sys/dom/types/documentFragment = inline "#1.createDocumentFragment()";
external createTextNode : (this : sys/dom/types/document, data : std/core/string) -> (sys/dom/types/dom :: E) sys/dom/types/text = inline "#1.createTextNode(#2)";
external createComment : (this : sys/dom/types/document, data : std/core/string) -> (sys/dom/types/dom :: E) sys/dom/types/comment = inline "#1.createComment(#2)";
external createProcessingInstruction : (this : sys/dom/types/document, target : std/core/string, data : std/core/string) -> (sys/dom/types/dom :: E) sys/dom/types/processingInstruction = inline "#1.createProcessingInstruction(#2, #3)";
external importNode : (this : sys/dom/types/document, node : sys/dom/types/node, deep : std/core/bool) -> (sys/dom/types/dom :: E) sys/dom/types/node = inline "#1.importNode(#2, #3)";
external adoptNode : (this : sys/dom/types/document, node : sys/dom/types/node) -> (sys/dom/types/dom :: E) sys/dom/types/node = inline "#1.adoptNode(#2)";
external createEvent : (this : sys/dom/types/document, eventInterfaceName : std/core/string) -> (sys/dom/types/dom :: E) sys/dom/types/event = inline "#1.createEvent(#2)";
// Document implements Document-1 (supplemental)
external styleSheets : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) sys/dom/types/styleSheetList = inline "#1.styleSheets";
external selectedStyleSheetSet : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.selectedStyleSheetSet";
external selectedStyleSheetSet .1 : (this : sys/dom/types/document, assigned : std/core/string) -> (sys/dom/types/dom :: E) () = inline "(#1.selectedStyleSheetSet = #2)";
external lastStyleSheetSet : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.lastStyleSheetSet";
external preferredStyleSheetSet : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.preferredStyleSheetSet";
external styleSheetSets : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) sys/dom/types/domStringList = inline "#1.styleSheetSets";
external enableStyleSheetsForSet : (this : sys/dom/types/document, name : std/core/string) -> (sys/dom/types/dom :: E) () = inline "#1.enableStyleSheetsForSet(#2)";
// Document implements Document (supplemental)
external elementFromPoint : (this : sys/dom/types/document, x : sys/dom/types/float32, y : sys/dom/types/float32) -> (sys/dom/types/dom :: E) sys/dom/types/element = inline "#1.elementFromPoint(#2, #3)";
external caretPositionFromPoint : (this : sys/dom/types/document, x : sys/dom/types/float32, y : sys/dom/types/float32) -> (sys/dom/types/dom :: E) sys/dom/types/caretPosition = inline "#1.caretPositionFromPoint(#2, #3)";
// Document implements NodeSelector (supplemental)
external querySelector : (this : sys/dom/types/document, selectors : std/core/string) -> (sys/dom/types/dom :: E) sys/dom/types/element = inline "#1.querySelector(#2)";
external querySelectorAll : (this : sys/dom/types/document, selectors : std/core/string) -> (sys/dom/types/dom :: E) sys/dom/types/nodeList = inline "#1.querySelectorAll(#2)";
// Document implements DocumentCSS (overloading)
external getOverrideStyle : (this : sys/dom/types/document, elt : sys/dom/types/element, pseudoElt : std/core/string) -> (sys/dom/types/dom :: E) sys/dom/types/cssStyleDeclaration = inline "#1.getOverrideStyle(#2, #3)";
// Document implements HTMLDocument (overloading)
external location : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) sys/dom/types/location = inline "#1.location";
external location .1 : (this : sys/dom/types/document, assigned : sys/dom/types/location) -> (sys/dom/types/dom :: E) () = inline "(#1.location = #2)";
external url : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.URL";
external domain : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.domain";
external domain .1 : (this : sys/dom/types/document, assigned : std/core/string) -> (sys/dom/types/dom :: E) () = inline "(#1.domain = #2)";
external referrer : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.referrer";
external cookie : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.cookie";
external cookie .1 : (this : sys/dom/types/document, assigned : std/core/string) -> (sys/dom/types/dom :: E) () = inline "(#1.cookie = #2)";
external lastModified : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.lastModified";
external readyState : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.readyState";
external getElement : (this : sys/dom/types/document, name : std/core/string) -> (sys/dom/types/dom :: E) std/core/any = inline "#1.getElement(#2)";
external title : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.title";
external title .1 : (this : sys/dom/types/document, assigned : std/core/string) -> (sys/dom/types/dom :: E) () = inline "(#1.title = #2)";
external dir : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.dir";
external dir .1 : (this : sys/dom/types/document, assigned : std/core/string) -> (sys/dom/types/dom :: E) () = inline "(#1.dir = #2)";
external body : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) sys/dom/types/htmlElement = inline "#1.body";
external body .1 : (this : sys/dom/types/document, assigned : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) () = inline "(#1.body = #2)";
external head : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) sys/dom/types/htmlHeadElement = inline "#1.head";
external images : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) sys/dom/types/htmlCollection = inline "#1.images";
external embeds : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) sys/dom/types/htmlCollection = inline "#1.embeds";
external plugins : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) sys/dom/types/htmlCollection = inline "#1.plugins";
external links : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) sys/dom/types/htmlCollection = inline "#1.links";
external forms : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) sys/dom/types/htmlCollection = inline "#1.forms";
external scripts : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) sys/dom/types/htmlCollection = inline "#1.scripts";
external getElementsByName : (this : sys/dom/types/document, elementName : std/core/string) -> (sys/dom/types/dom :: E) sys/dom/types/nodeList = inline "#1.getElementsByName(#2)";
external cssElementMap : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) sys/dom/types/domElementMap = inline "#1.cssElementMap";
external innerHtml : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.innerHTML";
external innerHtml .1 : (this : sys/dom/types/document, assigned : std/core/string) -> (sys/dom/types/dom :: E) () = inline "(#1.innerHTML = #2)";
external open : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) sys/dom/types/htmlDocument = inline "#1.open()";
external open .1 : (this : sys/dom/types/document, type_ : std/core/string) -> (sys/dom/types/dom :: E) sys/dom/types/htmlDocument = inline "#1.open(#2)";
external open .2 : (this : sys/dom/types/document, type_ : std/core/string, replace : std/core/string) -> (sys/dom/types/dom :: E) sys/dom/types/htmlDocument = inline "#1.open(#2, #3)";
external open .3 : (this : sys/dom/types/document, url : std/core/string, name : std/core/string, features : std/core/string) -> (sys/dom/types/dom :: E) sys/dom/types/windowProxy = inline "#1.open(#2, #3, #4)";
external open .4 : (this : sys/dom/types/document, url : std/core/string, name : std/core/string, features : std/core/string, replace : std/core/bool) -> (sys/dom/types/dom :: E) sys/dom/types/windowProxy = inline "#1.open(#2, #3, #4, #5)";
external close : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) () = inline "#1.close()";
external write : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) () = inline "#1.write()";
external write .1 : (this : sys/dom/types/document, text : std/core/string) -> (sys/dom/types/dom :: E) () = inline "#1.write(#2)";
external writeln : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) () = inline "#1.writeln()";
external writeln .1 : (this : sys/dom/types/document, text : std/core/string) -> (sys/dom/types/dom :: E) () = inline "#1.writeln(#2)";
external defaultView : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) sys/dom/types/windowProxy = inline "#1.defaultView";
external activeElement : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) sys/dom/types/element = inline "#1.activeElement";
external hasFocus : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) std/core/bool = inline "#1.hasFocus()";
external designMode : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.designMode";
external designMode .1 : (this : sys/dom/types/document, assigned : std/core/string) -> (sys/dom/types/dom :: E) () = inline "(#1.designMode = #2)";
external execCommand : (this : sys/dom/types/document, commandId : std/core/string) -> (sys/dom/types/dom :: E) std/core/bool = inline "#1.execCommand(#2)";
external execCommand .1 : (this : sys/dom/types/document, commandId : std/core/string, showUi : std/core/bool) -> (sys/dom/types/dom :: E) std/core/bool = inline "#1.execCommand(#2, #3)";
external execCommand .2 : (this : sys/dom/types/document, commandId : std/core/string, showUi : std/core/bool, value : std/core/string) -> (sys/dom/types/dom :: E) std/core/bool = inline "#1.execCommand(#2, #3, #4)";
external queryCommandEnabled : (this : sys/dom/types/document, commandId : std/core/string) -> (sys/dom/types/dom :: E) std/core/bool = inline "#1.queryCommandEnabled(#2)";
external queryCommandIndeterm : (this : sys/dom/types/document, commandId : std/core/string) -> (sys/dom/types/dom :: E) std/core/bool = inline "#1.queryCommandIndeterm(#2)";
external queryCommandState : (this : sys/dom/types/document, commandId : std/core/string) -> (sys/dom/types/dom :: E) std/core/bool = inline "#1.queryCommandState(#2)";
external queryCommandSupported : (this : sys/dom/types/document, commandId : std/core/string) -> (sys/dom/types/dom :: E) std/core/bool = inline "#1.queryCommandSupported(#2)";
external queryCommandValue : (this : sys/dom/types/document, commandId : std/core/string) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.queryCommandValue(#2)";
external commands : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) sys/dom/types/htmlCollection = inline "#1.commands";
external onabort : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/uiEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onabort";
external onabort .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onabort = #2)";
external onabort .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/uiEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onabort = #2)";
external onblur : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/focusEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onblur";
external onblur .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onblur = #2)";
external onblur .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/focusEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onblur = #2)";
external oncanplay : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.oncanplay";
external oncanplay .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oncanplay = #2)";
external oncanplay .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oncanplay = #2)";
external oncanplaythrough : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.oncanplaythrough";
external oncanplaythrough .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oncanplaythrough = #2)";
external oncanplaythrough .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oncanplaythrough = #2)";
external onchange : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onchange";
external onchange .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onchange = #2)";
external onchange .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onchange = #2)";
external onclick : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/mouseEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onclick";
external onclick .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onclick = #2)";
external onclick .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/mouseEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onclick = #2)";
external oncontextmenu : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/mouseEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.oncontextmenu";
external oncontextmenu .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oncontextmenu = #2)";
external oncontextmenu .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/mouseEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oncontextmenu = #2)";
external oncuechange : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.oncuechange";
external oncuechange .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oncuechange = #2)";
external oncuechange .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oncuechange = #2)";
external ondblclick : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/mouseEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.ondblclick";
external ondblclick .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondblclick = #2)";
external ondblclick .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/mouseEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondblclick = #2)";
external ondrag : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/dragEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.ondrag";
external ondrag .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondrag = #2)";
external ondrag .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/dragEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondrag = #2)";
external ondragend : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/dragEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.ondragend";
external ondragend .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondragend = #2)";
external ondragend .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/dragEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondragend = #2)";
external ondragenter : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/dragEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.ondragenter";
external ondragenter .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondragenter = #2)";
external ondragenter .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/dragEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondragenter = #2)";
external ondragleave : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/dragEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.ondragleave";
external ondragleave .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondragleave = #2)";
external ondragleave .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/dragEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondragleave = #2)";
external ondragover : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/dragEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.ondragover";
external ondragover .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondragover = #2)";
external ondragover .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/dragEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondragover = #2)";
external ondragstart : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/dragEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.ondragstart";
external ondragstart .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondragstart = #2)";
external ondragstart .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/dragEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondragstart = #2)";
external ondrop : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/dragEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.ondrop";
external ondrop .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondrop = #2)";
external ondrop .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/dragEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondrop = #2)";
external ondurationchange : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.ondurationchange";
external ondurationchange .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondurationchange = #2)";
external ondurationchange .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondurationchange = #2)";
external onemptied : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onemptied";
external onemptied .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onemptied = #2)";
external onemptied .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onemptied = #2)";
external onended : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onended";
external onended .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onended = #2)";
external onended .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onended = #2)";
external onerror : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onerror";
external onerror .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onerror = #2)";
external onerror .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onerror = #2)";
external onfocus : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/focusEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onfocus";
external onfocus .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onfocus = #2)";
external onfocus .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/focusEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onfocus = #2)";
external oninput : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.oninput";
external oninput .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oninput = #2)";
external oninput .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oninput = #2)";
external oninvalid : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.oninvalid";
external oninvalid .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oninvalid = #2)";
external oninvalid .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oninvalid = #2)";
external onkeydown : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/keyboardEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onkeydown";
external onkeydown .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onkeydown = #2)";
external onkeydown .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/keyboardEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onkeydown = #2)";
external onkeypress : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/keyboardEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onkeypress";
external onkeypress .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onkeypress = #2)";
external onkeypress .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/keyboardEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onkeypress = #2)";
external onkeyup : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/keyboardEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onkeyup";
external onkeyup .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onkeyup = #2)";
external onkeyup .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/keyboardEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onkeyup = #2)";
external onload : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onload";
external onload .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onload = #2)";
external onload .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onload = #2)";
external onloadeddata : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onloadeddata";
external onloadeddata .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onloadeddata = #2)";
external onloadeddata .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onloadeddata = #2)";
external onloadedmetadata : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onloadedmetadata";
external onloadedmetadata .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onloadedmetadata = #2)";
external onloadedmetadata .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onloadedmetadata = #2)";
external onloadstart : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onloadstart";
external onloadstart .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onloadstart = #2)";
external onloadstart .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onloadstart = #2)";
external onmousedown : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/mouseEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onmousedown";
external onmousedown .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmousedown = #2)";
external onmousedown .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/mouseEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmousedown = #2)";
external onmousemove : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/mouseEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onmousemove";
external onmousemove .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmousemove = #2)";
external onmousemove .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/mouseEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmousemove = #2)";
external onmouseout : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/mouseEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onmouseout";
external onmouseout .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmouseout = #2)";
external onmouseout .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/mouseEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmouseout = #2)";
external onmouseover : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/mouseEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onmouseover";
external onmouseover .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmouseover = #2)";
external onmouseover .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/mouseEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmouseover = #2)";
external onmouseup : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/mouseEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onmouseup";
external onmouseup .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmouseup = #2)";
external onmouseup .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/mouseEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmouseup = #2)";
external onmousewheel : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/wheelEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onmousewheel";
external onmousewheel .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmousewheel = #2)";
external onmousewheel .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/wheelEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmousewheel = #2)";
external onpause : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onpause";
external onpause .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onpause = #2)";
external onpause .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onpause = #2)";
external onplay : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onplay";
external onplay .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onplay = #2)";
external onplay .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onplay = #2)";
external onplaying : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onplaying";
external onplaying .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onplaying = #2)";
external onplaying .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onplaying = #2)";
external onprogress : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/progressEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onprogress";
external onprogress .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onprogress = #2)";
external onprogress .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/progressEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onprogress = #2)";
external onratechange : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onratechange";
external onratechange .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onratechange = #2)";
external onratechange .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onratechange = #2)";
external onreadystatechange : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onreadystatechange";
external onreadystatechange .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onreadystatechange = #2)";
external onreadystatechange .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onreadystatechange = #2)";
external onreset : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onreset";
external onreset .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onreset = #2)";
external onreset .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onreset = #2)";
external onscroll : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/uiEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onscroll";
external onscroll .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onscroll = #2)";
external onscroll .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/uiEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onscroll = #2)";
external onseeked : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onseeked";
external onseeked .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onseeked = #2)";
external onseeked .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onseeked = #2)";
external onseeking : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onseeking";
external onseeking .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onseeking = #2)";
external onseeking .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onseeking = #2)";
external onselect : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/uiEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onselect";
external onselect .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onselect = #2)";
external onselect .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/uiEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onselect = #2)";
external onshow : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onshow";
external onshow .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onshow = #2)";
external onshow .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onshow = #2)";
external onstalled : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onstalled";
external onstalled .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onstalled = #2)";
external onstalled .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onstalled = #2)";
external onsubmit : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onsubmit";
external onsubmit .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onsubmit = #2)";
external onsubmit .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onsubmit = #2)";
external onsuspend : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onsuspend";
external onsuspend .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onsuspend = #2)";
external onsuspend .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onsuspend = #2)";
external ontimeupdate : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.ontimeupdate";
external ontimeupdate .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ontimeupdate = #2)";
external ontimeupdate .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ontimeupdate = #2)";
external onvolumechange : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onvolumechange";
external onvolumechange .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onvolumechange = #2)";
external onvolumechange .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onvolumechange = #2)";
external onwaiting : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onwaiting";
external onwaiting .1 : forall<(e :: E)> (this : sys/dom/types/document, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onwaiting = #2)";
external onwaiting .2 : forall<(e :: E)> (this : sys/dom/types/document, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onwaiting = #2)";
// Document implements HTMLDocument-34 (overloading)
external fgColor : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.fgColor";
external fgColor .1 : (this : sys/dom/types/document, assigned : std/core/string) -> (sys/dom/types/dom :: E) () = inline "(#1.fgColor = #2)";
external bgColor : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.bgColor";
external bgColor .1 : (this : sys/dom/types/document, assigned : std/core/string) -> (sys/dom/types/dom :: E) () = inline "(#1.bgColor = #2)";
external linkColor : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.linkColor";
external linkColor .1 : (this : sys/dom/types/document, assigned : std/core/string) -> (sys/dom/types/dom :: E) () = inline "(#1.linkColor = #2)";
external vlinkColor : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.vlinkColor";
external vlinkColor .1 : (this : sys/dom/types/document, assigned : std/core/string) -> (sys/dom/types/dom :: E) () = inline "(#1.vlinkColor = #2)";
external alinkColor : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.alinkColor";
external alinkColor .1 : (this : sys/dom/types/document, assigned : std/core/string) -> (sys/dom/types/dom :: E) () = inline "(#1.alinkColor = #2)";
external anchors : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) sys/dom/types/htmlCollection = inline "#1.anchors";
external applets : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) sys/dom/types/htmlCollection = inline "#1.applets";
external clear : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) () = inline "#1.clear()";
external all : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) sys/dom/types/htmlAllCollection = inline "#1.all";
// Document implements DocumentRange (overloading)
external createRange : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) sys/dom/types/range = inline "#1.createRange()";
// Document implements DocumentTraversal (overloading)
external createNodeIterator : (this : sys/dom/types/document, root : sys/dom/types/node, whatToShow : sys/dom/types/uint32, filter : sys/dom/types/nodeFilter, entityReferenceExpansion : std/core/bool) -> (sys/dom/types/dom :: E) sys/dom/types/nodeIterator = inline "#1.createNodeIterator(#2, #3, #4, #5)";
external createTreeWalker : (this : sys/dom/types/document, root : sys/dom/types/node, whatToShow : sys/dom/types/uint32, filter : sys/dom/types/nodeFilter, entityReferenceExpansion : std/core/bool) -> (sys/dom/types/dom :: E) sys/dom/types/treeWalker = inline "#1.createTreeWalker(#2, #3, #4, #5)";
// Document extends Node
external node : (sys/dom/types/document) -> sys/dom/types/node = inline "#1";
// Document implements in extension Node (overloading)
external nodeType : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) sys/dom/types/nodeType = inline "#1.nodeType";
external nodeName : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.nodeName";
external baseUri : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.baseURI";
external ownerDocument : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) sys/dom/types/document = inline "#1.ownerDocument";
external parentNode : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) sys/dom/types/node = inline "#1.parentNode";
external parentElement : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) sys/dom/types/element = inline "#1.parentElement";
external hasChildNodes : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) std/core/bool = inline "#1.hasChildNodes()";
external childNodes : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) sys/dom/types/nodeList = inline "#1.childNodes";
external firstChild : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) sys/dom/types/node = inline "#1.firstChild";
external lastChild : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) sys/dom/types/node = inline "#1.lastChild";
external previousSibling : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) sys/dom/types/node = inline "#1.previousSibling";
external nextSibling : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) sys/dom/types/node = inline "#1.nextSibling";
external compareDocumentPosition : (this : sys/dom/types/document, other : sys/dom/types/node) -> (sys/dom/types/dom :: E) sys/dom/types/uint16 = inline "#1.compareDocumentPosition(#2)";
external nodeValue : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.nodeValue";
external nodeValue .1 : (this : sys/dom/types/document, assigned : std/core/string) -> (sys/dom/types/dom :: E) () = inline "(#1.nodeValue = #2)";
external textContent : (this : sys/dom/types/document) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.textContent";
external textContent .1 : (this : sys/dom/types/document, assigned : std/core/string) -> (sys/dom/types/dom :: E) () = inline "(#1.textContent = #2)";
external insertBefore : (this : sys/dom/types/document, newChild : sys/dom/types/node, refChild : sys/dom/types/node) -> (sys/dom/types/dom :: E) sys/dom/types/node = inline "#1.insertBefore(#2, #3)";
external replaceChild : (this : sys/dom/types/document, newChild : sys/dom/types/node, oldChild : sys/dom/types/node) -> (sys/dom/types/dom :: E) sys/dom/types/node = inline "#1.replaceChild(#2, #3)";
external removeChild : (this : sys/dom/types/document, oldChild : sys/dom/types/node) -> (sys/dom/types/dom :: E) sys/dom/types/node = inline "#1.removeChild(#2)";
external appendChild : (this : sys/dom/types/document, newChild : sys/dom/types/node) -> (sys/dom/types/dom :: E) sys/dom/types/node = inline "#1.appendChild(#2)";
external cloneNode : (this : sys/dom/types/document, deep : std/core/bool) -> (sys/dom/types/dom :: E) sys/dom/types/node = inline "#1.cloneNode(#2)";
external isSameNode : (this : sys/dom/types/document, node : sys/dom/types/node) -> (sys/dom/types/dom :: E) std/core/bool = inline "#1.isSameNode(#2)";
external isEqualNode : (this : sys/dom/types/document, node : sys/dom/types/node) -> (sys/dom/types/dom :: E) std/core/bool = inline "#1.isEqualNode(#2)";
external lookupPrefix : (this : sys/dom/types/document, namespace : std/core/string) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.lookupPrefix(#2)";
external lookupNamespaceUri : (this : sys/dom/types/document, prefix_ : std/core/string) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.lookupNamespaceURI(#2)";
external isDefaultNamespace : (this : sys/dom/types/document, namespace : std/core/string) -> (sys/dom/types/dom :: E) std/core/bool = inline "#1.isDefaultNamespace(#2)";
// Document extends EventTarget
external eventTarget : (sys/dom/types/document) -> sys/dom/types/eventTarget = inline "#1";
// Document implements in extension EventTarget (overloading)
external addEventListener : (this : sys/dom/types/document, type_ : std/core/string, listener : sys/dom/types/eventListener) -> (sys/dom/types/dom :: E) () = inline "#1.addEventListener(#2, #3)";
external addEventListener .1 : (this : sys/dom/types/document, type_ : std/core/string, listener : sys/dom/types/eventListener, capture : std/core/bool) -> (sys/dom/types/dom :: E) () = inline "#1.addEventListener(#2, #3, #4)";
external removeEventListener : (this : sys/dom/types/document, type_ : std/core/string, listener : sys/dom/types/eventListener) -> (sys/dom/types/dom :: E) () = inline "#1.removeEventListener(#2, #3)";
external removeEventListener .1 : (this : sys/dom/types/document, type_ : std/core/string, listener : sys/dom/types/eventListener, capture : std/core/bool) -> (sys/dom/types/dom :: E) () = inline "#1.removeEventListener(#2, #3, #4)";
external dispatchEvent : (this : sys/dom/types/document, event : sys/dom/types/event) -> (sys/dom/types/dom :: E) std/core/bool = inline "#1.dispatchEvent(#2)";