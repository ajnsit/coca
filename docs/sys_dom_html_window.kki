module interface sys/dom/html/window
/* This module defines standard operations that are always available.

   Some types and operations are required to be defined for the compiler
   to work correctly (i.e. types like `:int` or `:list`)
*/
import std/core = std/core = "";
// Basic types of the HTML5 DOM model
import sys/dom/types = sys/dom/types = "";
// Stateful funs can manipulate heap `:h` using allocations, reads and writes.
private alias std/core/st<(h :: H)> :: H -> E = <(std/core/read :: H -> X)<(h :: H)>,(std/core/write :: H -> X)<(h :: H)>,(std/core/alloc :: H -> X)<(h :: H)>> = 1;
private alias sys/dom/types/dom :: E = <(std/core/exn :: X),(std/core/ndet :: X),(std/core/console :: X),(std/core/net :: X),(std/core/ui :: X),((std/core/st :: H -> E)<(sys/dom/types/hdom :: H)> == 1 <(std/core/read :: H -> X)<(sys/dom/types/hdom :: H)>,(std/core/write :: H -> X)<(sys/dom/types/hdom :: H)>,(std/core/alloc :: H -> X)<(sys/dom/types/hdom :: H)>>)> = 2;
private alias sys/dom/types/int32 = std/core/int = 1;
private alias sys/dom/types/milliseconds = std/core/int = 1;
private alias sys/dom/types/uint32 = std/core/int = 1;
/* safe and unsafe conversion from all types including `any */
external maybeWindow : forall<a> (a) -> (std/core/maybe :: V -> V)<sys/dom/types/window> = inline "(#1.toString()==='[object Window]'?std_core.Just(#1):std_core.Nothing)";
external toWindow : forall<a> (a) -> <(std/core/exn :: X)> sys/dom/types/window = inline "(#1.toString()==='[object Window]'?#1:std_core.error('toWindow: cast failed'))";
// Window implements Window (supplemental)
external window : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) sys/dom/types/windowProxy = inline "#1.window";
external self : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) sys/dom/types/windowProxy = inline "#1.self";
external document : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) sys/dom/types/document = inline "#1.document";
external name : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.name";
external name .1 : (this : sys/dom/types/window, assigned : std/core/string) -> (sys/dom/types/dom :: E) () = inline "(#1.name = #2)";
external location : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) sys/dom/types/location = inline "#1.location";
external location .1 : (this : sys/dom/types/window, assigned : sys/dom/types/location) -> (sys/dom/types/dom :: E) () = inline "(#1.location = #2)";
external history : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) sys/dom/types/history = inline "#1.history";
external undoManager : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) sys/dom/types/undoManager = inline "#1.undoManager";
external locationbar : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) sys/dom/types/barProp = inline "#1.locationbar";
external locationbar .1 : (this : sys/dom/types/window, assigned : sys/dom/types/barProp) -> (sys/dom/types/dom :: E) () = inline "(#1.locationbar = #2)";
external menubar : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) sys/dom/types/barProp = inline "#1.menubar";
external menubar .1 : (this : sys/dom/types/window, assigned : sys/dom/types/barProp) -> (sys/dom/types/dom :: E) () = inline "(#1.menubar = #2)";
external personalbar : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) sys/dom/types/barProp = inline "#1.personalbar";
external personalbar .1 : (this : sys/dom/types/window, assigned : sys/dom/types/barProp) -> (sys/dom/types/dom :: E) () = inline "(#1.personalbar = #2)";
external scrollbars : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) sys/dom/types/barProp = inline "#1.scrollbars";
external scrollbars .1 : (this : sys/dom/types/window, assigned : sys/dom/types/barProp) -> (sys/dom/types/dom :: E) () = inline "(#1.scrollbars = #2)";
external statusbar : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) sys/dom/types/barProp = inline "#1.statusbar";
external statusbar .1 : (this : sys/dom/types/window, assigned : sys/dom/types/barProp) -> (sys/dom/types/dom :: E) () = inline "(#1.statusbar = #2)";
external toolbar : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) sys/dom/types/barProp = inline "#1.toolbar";
external toolbar .1 : (this : sys/dom/types/window, assigned : sys/dom/types/barProp) -> (sys/dom/types/dom :: E) () = inline "(#1.toolbar = #2)";
external status : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.status";
external status .1 : (this : sys/dom/types/window, assigned : std/core/string) -> (sys/dom/types/dom :: E) () = inline "(#1.status = #2)";
external close : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) () = inline "#1.close()";
external stop : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) () = inline "#1.stop()";
external focus : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) () = inline "#1.focus()";
external blur : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) () = inline "#1.blur()";
external frames : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) sys/dom/types/windowProxy = inline "#1.frames";
external frames .1 : (this : sys/dom/types/window, assigned : sys/dom/types/windowProxy) -> (sys/dom/types/dom :: E) () = inline "(#1.frames = #2)";
external length : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) sys/dom/types/uint32 = inline "#1.length";
external length .1 : (this : sys/dom/types/window, assigned : sys/dom/types/uint32) -> (sys/dom/types/dom :: E) () = inline "(#1.length = #2)";
external top : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) sys/dom/types/windowProxy = inline "#1.top";
external opener : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) sys/dom/types/windowProxy = inline "#1.opener";
external opener .1 : (this : sys/dom/types/window, assigned : sys/dom/types/windowProxy) -> (sys/dom/types/dom :: E) () = inline "(#1.opener = #2)";
external parent : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) sys/dom/types/windowProxy = inline "#1.parent";
external frameElement : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) sys/dom/types/element = inline "#1.frameElement";
external open : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) sys/dom/types/windowProxy = inline "#1.open()";
external open .1 : (this : sys/dom/types/window, url : std/core/string) -> (sys/dom/types/dom :: E) sys/dom/types/windowProxy = inline "#1.open(#2)";
external open .2 : (this : sys/dom/types/window, url : std/core/string, target : std/core/string) -> (sys/dom/types/dom :: E) sys/dom/types/windowProxy = inline "#1.open(#2, #3)";
external open .3 : (this : sys/dom/types/window, url : std/core/string, target : std/core/string, features : std/core/string) -> (sys/dom/types/dom :: E) sys/dom/types/windowProxy = inline "#1.open(#2, #3, #4)";
external open .4 : (this : sys/dom/types/window, url : std/core/string, target : std/core/string, features : std/core/string, replace : std/core/bool) -> (sys/dom/types/dom :: E) sys/dom/types/windowProxy = inline "#1.open(#2, #3, #4, #5)";
external getElement : (this : sys/dom/types/window, index : sys/dom/types/uint32) -> (sys/dom/types/dom :: E) sys/dom/types/windowProxy = inline "#1.getElement(#2)";
external getElement .1 : (this : sys/dom/types/window, name : std/core/string) -> (sys/dom/types/dom :: E) std/core/any = inline "#1.getElement(#2)";
external setElement : forall<a> (this : sys/dom/types/window, name : std/core/string, value : a) -> (sys/dom/types/dom :: E) () = inline "#1.setElement(#2, #3)";
external navigator : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) sys/dom/types/navigator = inline "#1.navigator";
external external_ : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) sys/dom/types/external_ = inline "#1.external";
external applicationCache : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) sys/dom/types/applicationCache = inline "#1.applicationCache";
external alert : (this : sys/dom/types/window, message : std/core/string) -> (sys/dom/types/dom :: E) () = inline "#1.alert(#2)";
external confirm : (this : sys/dom/types/window, message : std/core/string) -> (sys/dom/types/dom :: E) std/core/bool = inline "#1.confirm(#2)";
external prompt : (this : sys/dom/types/window, message : std/core/string) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.prompt(#2)";
external prompt .1 : (this : sys/dom/types/window, message : std/core/string, default : std/core/string) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.prompt(#2, #3)";
external print : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) () = inline "#1.print()";
external showModalDialog : (this : sys/dom/types/window, url : std/core/string) -> (sys/dom/types/dom :: E) std/core/any = inline "#1.showModalDialog(#2)";
external showModalDialog .1 : forall<a> (this : sys/dom/types/window, url : std/core/string, argument : a) -> (sys/dom/types/dom :: E) std/core/any = inline "#1.showModalDialog(#2, #3)";
external postMessage : forall<a> (this : sys/dom/types/window, message : a, targetOrigin : std/core/string) -> (sys/dom/types/dom :: E) () = inline "#1.postMessage(#2, #3)";
external postMessage .1 : forall<a> (this : sys/dom/types/window, message : a, targetOrigin : std/core/string, transfer : sys/dom/types/seqence) -> (sys/dom/types/dom :: E) () = inline "#1.postMessage(#2, #3, #4)";
external onabort : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/uiEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onabort";
external onabort .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onabort = #2)";
external onabort .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/uiEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onabort = #2)";
external onafterprint : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onafterprint";
external onafterprint .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onafterprint = #2)";
external onafterprint .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onafterprint = #2)";
external onbeforeprint : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onbeforeprint";
external onbeforeprint .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onbeforeprint = #2)";
external onbeforeprint .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onbeforeprint = #2)";
external onbeforeunload : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onbeforeunload";
external onbeforeunload .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onbeforeunload = #2)";
external onbeforeunload .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onbeforeunload = #2)";
external onblur : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/focusEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onblur";
external onblur .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onblur = #2)";
external onblur .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/focusEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onblur = #2)";
external oncanplay : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.oncanplay";
external oncanplay .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oncanplay = #2)";
external oncanplay .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oncanplay = #2)";
external oncanplaythrough : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.oncanplaythrough";
external oncanplaythrough .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oncanplaythrough = #2)";
external oncanplaythrough .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oncanplaythrough = #2)";
external onchange : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onchange";
external onchange .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onchange = #2)";
external onchange .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onchange = #2)";
external onclick : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/mouseEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onclick";
external onclick .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onclick = #2)";
external onclick .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/mouseEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onclick = #2)";
external oncontextmenu : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/mouseEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.oncontextmenu";
external oncontextmenu .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oncontextmenu = #2)";
external oncontextmenu .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/mouseEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oncontextmenu = #2)";
external oncuechange : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.oncuechange";
external oncuechange .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oncuechange = #2)";
external oncuechange .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oncuechange = #2)";
external ondblclick : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/mouseEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.ondblclick";
external ondblclick .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondblclick = #2)";
external ondblclick .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/mouseEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondblclick = #2)";
external ondrag : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/dragEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.ondrag";
external ondrag .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondrag = #2)";
external ondrag .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/dragEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondrag = #2)";
external ondragend : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/dragEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.ondragend";
external ondragend .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondragend = #2)";
external ondragend .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/dragEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondragend = #2)";
external ondragenter : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/dragEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.ondragenter";
external ondragenter .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondragenter = #2)";
external ondragenter .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/dragEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondragenter = #2)";
external ondragleave : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/dragEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.ondragleave";
external ondragleave .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondragleave = #2)";
external ondragleave .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/dragEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondragleave = #2)";
external ondragover : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/dragEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.ondragover";
external ondragover .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondragover = #2)";
external ondragover .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/dragEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondragover = #2)";
external ondragstart : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/dragEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.ondragstart";
external ondragstart .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondragstart = #2)";
external ondragstart .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/dragEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondragstart = #2)";
external ondrop : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/dragEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.ondrop";
external ondrop .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondrop = #2)";
external ondrop .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/dragEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondrop = #2)";
external ondurationchange : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.ondurationchange";
external ondurationchange .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondurationchange = #2)";
external ondurationchange .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondurationchange = #2)";
external onemptied : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onemptied";
external onemptied .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onemptied = #2)";
external onemptied .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onemptied = #2)";
external onended : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onended";
external onended .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onended = #2)";
external onended .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onended = #2)";
external onerror : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onerror";
external onerror .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onerror = #2)";
external onerror .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onerror = #2)";
external onfocus : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/focusEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onfocus";
external onfocus .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onfocus = #2)";
external onfocus .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/focusEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onfocus = #2)";
external onhashchange : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onhashchange";
external onhashchange .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onhashchange = #2)";
external onhashchange .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onhashchange = #2)";
external oninput : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.oninput";
external oninput .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oninput = #2)";
external oninput .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oninput = #2)";
external oninvalid : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.oninvalid";
external oninvalid .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oninvalid = #2)";
external oninvalid .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oninvalid = #2)";
external onkeydown : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/keyboardEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onkeydown";
external onkeydown .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onkeydown = #2)";
external onkeydown .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/keyboardEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onkeydown = #2)";
external onkeypress : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/keyboardEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onkeypress";
external onkeypress .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onkeypress = #2)";
external onkeypress .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/keyboardEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onkeypress = #2)";
external onkeyup : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/keyboardEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onkeyup";
external onkeyup .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onkeyup = #2)";
external onkeyup .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/keyboardEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onkeyup = #2)";
external onload : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onload";
external onload .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onload = #2)";
external onload .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onload = #2)";
external onloadeddata : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onloadeddata";
external onloadeddata .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onloadeddata = #2)";
external onloadeddata .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onloadeddata = #2)";
external onloadedmetadata : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onloadedmetadata";
external onloadedmetadata .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onloadedmetadata = #2)";
external onloadedmetadata .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onloadedmetadata = #2)";
external onloadstart : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onloadstart";
external onloadstart .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onloadstart = #2)";
external onloadstart .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onloadstart = #2)";
external onmessage : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onmessage";
external onmessage .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmessage = #2)";
external onmessage .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmessage = #2)";
external onmousedown : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/mouseEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onmousedown";
external onmousedown .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmousedown = #2)";
external onmousedown .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/mouseEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmousedown = #2)";
external onmousemove : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/mouseEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onmousemove";
external onmousemove .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmousemove = #2)";
external onmousemove .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/mouseEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmousemove = #2)";
external onmouseout : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/mouseEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onmouseout";
external onmouseout .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmouseout = #2)";
external onmouseout .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/mouseEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmouseout = #2)";
external onmouseover : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/mouseEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onmouseover";
external onmouseover .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmouseover = #2)";
external onmouseover .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/mouseEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmouseover = #2)";
external onmouseup : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/mouseEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onmouseup";
external onmouseup .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmouseup = #2)";
external onmouseup .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/mouseEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmouseup = #2)";
external onmousewheel : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/wheelEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onmousewheel";
external onmousewheel .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmousewheel = #2)";
external onmousewheel .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/wheelEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmousewheel = #2)";
external onoffline : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onoffline";
external onoffline .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onoffline = #2)";
external onoffline .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onoffline = #2)";
external ononline : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.ononline";
external ononline .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ononline = #2)";
external ononline .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ononline = #2)";
external onpause : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onpause";
external onpause .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onpause = #2)";
external onpause .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onpause = #2)";
external onplay : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onplay";
external onplay .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onplay = #2)";
external onplay .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onplay = #2)";
external onplaying : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onplaying";
external onplaying .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onplaying = #2)";
external onplaying .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onplaying = #2)";
external onpagehide : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onpagehide";
external onpagehide .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onpagehide = #2)";
external onpagehide .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onpagehide = #2)";
external onpageshow : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onpageshow";
external onpageshow .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onpageshow = #2)";
external onpageshow .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onpageshow = #2)";
external onpopstate : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onpopstate";
external onpopstate .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onpopstate = #2)";
external onpopstate .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onpopstate = #2)";
external onprogress : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/progressEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onprogress";
external onprogress .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onprogress = #2)";
external onprogress .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/progressEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onprogress = #2)";
external onratechange : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onratechange";
external onratechange .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onratechange = #2)";
external onratechange .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onratechange = #2)";
external onreadystatechange : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onreadystatechange";
external onreadystatechange .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onreadystatechange = #2)";
external onreadystatechange .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onreadystatechange = #2)";
external onredo : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onredo";
external onredo .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onredo = #2)";
external onredo .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onredo = #2)";
external onreset : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onreset";
external onreset .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onreset = #2)";
external onreset .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onreset = #2)";
external onresize : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/uiEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onresize";
external onresize .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onresize = #2)";
external onresize .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/uiEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onresize = #2)";
external onscroll : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/uiEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onscroll";
external onscroll .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onscroll = #2)";
external onscroll .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/uiEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onscroll = #2)";
external onseeked : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onseeked";
external onseeked .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onseeked = #2)";
external onseeked .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onseeked = #2)";
external onseeking : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onseeking";
external onseeking .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onseeking = #2)";
external onseeking .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onseeking = #2)";
external onselect : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/uiEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onselect";
external onselect .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onselect = #2)";
external onselect .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/uiEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onselect = #2)";
external onshow : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onshow";
external onshow .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onshow = #2)";
external onshow .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onshow = #2)";
external onstalled : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onstalled";
external onstalled .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onstalled = #2)";
external onstalled .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onstalled = #2)";
external onstorage : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onstorage";
external onstorage .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onstorage = #2)";
external onstorage .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onstorage = #2)";
external onsubmit : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onsubmit";
external onsubmit .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onsubmit = #2)";
external onsubmit .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onsubmit = #2)";
external onsuspend : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onsuspend";
external onsuspend .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onsuspend = #2)";
external onsuspend .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onsuspend = #2)";
external ontimeupdate : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.ontimeupdate";
external ontimeupdate .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ontimeupdate = #2)";
external ontimeupdate .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ontimeupdate = #2)";
external onundo : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onundo";
external onundo .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onundo = #2)";
external onundo .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onundo = #2)";
external onunload : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onunload";
external onunload .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onunload = #2)";
external onunload .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onunload = #2)";
external onvolumechange : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onvolumechange";
external onvolumechange .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onvolumechange = #2)";
external onvolumechange .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onvolumechange = #2)";
external onwaiting : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onwaiting";
external onwaiting .1 : forall<(e :: E)> (this : sys/dom/types/window, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onwaiting = #2)";
external onwaiting .2 : forall<(e :: E)> (this : sys/dom/types/window, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onwaiting = #2)";
// Window implements Window-2 (supplemental)
external getComputedStyle : (this : sys/dom/types/window, elt : sys/dom/types/element) -> (sys/dom/types/dom :: E) sys/dom/types/cssStyleDeclaration = inline "#1.getComputedStyle(#2)";
external getComputedStyle .1 : (this : sys/dom/types/window, elt : sys/dom/types/element, pseudoElt : std/core/string) -> (sys/dom/types/dom :: E) sys/dom/types/cssStyleDeclaration = inline "#1.getComputedStyle(#2, #3)";
// Window implements Window (supplemental)
external matchMedia : (this : sys/dom/types/window, media_query_list : std/core/string) -> (sys/dom/types/dom :: E) sys/dom/types/mediaQueryList = inline "#1.matchMedia(#2)";
external screen : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) sys/dom/types/screen = inline "#1.screen";
external innerWidth : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) sys/dom/types/int32 = inline "#1.innerWidth";
external innerHeight : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) sys/dom/types/int32 = inline "#1.innerHeight";
external scrollX : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) sys/dom/types/int32 = inline "#1.scrollX";
external pageXOffset : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) sys/dom/types/int32 = inline "#1.pageXOffset";
external scrollY : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) sys/dom/types/int32 = inline "#1.scrollY";
external pageYOffset : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) sys/dom/types/int32 = inline "#1.pageYOffset";
external scroll : (this : sys/dom/types/window, x : sys/dom/types/int32, y : sys/dom/types/int32) -> (sys/dom/types/dom :: E) () = inline "#1.scroll(#2, #3)";
external scrollTo : (this : sys/dom/types/window, x : sys/dom/types/int32, y : sys/dom/types/int32) -> (sys/dom/types/dom :: E) () = inline "#1.scrollTo(#2, #3)";
external scrollBy : (this : sys/dom/types/window, x : sys/dom/types/int32, y : sys/dom/types/int32) -> (sys/dom/types/dom :: E) () = inline "#1.scrollBy(#2, #3)";
external screenX : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) sys/dom/types/int32 = inline "#1.screenX";
external screenY : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) sys/dom/types/int32 = inline "#1.screenY";
external outerWidth : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) sys/dom/types/int32 = inline "#1.outerWidth";
external outerHeight : (this : sys/dom/types/window) -> (sys/dom/types/dom :: E) sys/dom/types/int32 = inline "#1.outerHeight";
// Window implements WindowBase64 (supplemental)
external btoa : (this : sys/dom/types/window, btoa : std/core/string) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.btoa(#2)";
external atob : (this : sys/dom/types/window, atob : std/core/string) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.atob(#2)";
// Window implements WindowTimers (supplemental)
external setTimeout : (this : sys/dom/types/window, _handler : () -> (sys/dom/types/dom :: E) ()) -> (sys/dom/types/dom :: E) sys/dom/types/int32 = inline "#1.setTimeout(#2)";
external setTimeout .1 : forall<(e :: E)> (this : sys/dom/types/window, _handler : () -> <(sys/dom/types/dom :: E)|(e :: E)> (), timeout : sys/dom/types/milliseconds) -> <(sys/dom/types/dom :: E)|(e :: E)> sys/dom/types/int32 = inline "#1.setTimeout(#2, #3)";
external clearTimeout : (this : sys/dom/types/window, _handle : sys/dom/types/int32) -> (sys/dom/types/dom :: E) () = inline "#1.clearTimeout(#2)";
external setInterval : (this : sys/dom/types/window, _handler : () -> (sys/dom/types/dom :: E) ()) -> (sys/dom/types/dom :: E) sys/dom/types/int32 = inline "#1.setInterval(#2)";
external setInterval .1 : (this : sys/dom/types/window, _handler : () -> (sys/dom/types/dom :: E) (), timeout : sys/dom/types/milliseconds) -> (sys/dom/types/dom :: E) sys/dom/types/int32 = inline "#1.setInterval(#2, #3)";
external clearInterval : (this : sys/dom/types/window, _handle : sys/dom/types/int32) -> (sys/dom/types/dom :: E) () = inline "#1.clearInterval(#2)";
// Window implements EventTarget (overloading)
external addEventListener : (this : sys/dom/types/window, type_ : std/core/string, listener : sys/dom/types/eventListener) -> (sys/dom/types/dom :: E) () = inline "#1.addEventListener(#2, #3)";
external addEventListener .1 : (this : sys/dom/types/window, type_ : std/core/string, listener : sys/dom/types/eventListener, capture : std/core/bool) -> (sys/dom/types/dom :: E) () = inline "#1.addEventListener(#2, #3, #4)";
external removeEventListener : (this : sys/dom/types/window, type_ : std/core/string, listener : sys/dom/types/eventListener) -> (sys/dom/types/dom :: E) () = inline "#1.removeEventListener(#2, #3)";
external removeEventListener .1 : (this : sys/dom/types/window, type_ : std/core/string, listener : sys/dom/types/eventListener, capture : std/core/bool) -> (sys/dom/types/dom :: E) () = inline "#1.removeEventListener(#2, #3, #4)";
external dispatchEvent : (this : sys/dom/types/window, event : sys/dom/types/event) -> (sys/dom/types/dom :: E) std/core/bool = inline "#1.dispatchEvent(#2)";