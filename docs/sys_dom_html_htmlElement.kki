module interface sys/dom/html/htmlElement
/* This module defines standard operations that are always available.

   Some types and operations are required to be defined for the compiler
   to work correctly (i.e. types like `:int` or `:list`)
*/
import std/core = std/core = "";
// Basic types of the HTML5 DOM model
import sys/dom/types = sys/dom/types = "";
// Stateful funs can manipulate heap `:h` using allocations, reads and writes.
private alias std/core/st<(h :: H)> :: H -> E = <(std/core/read :: H -> X)<(h :: H)>,(std/core/write :: H -> X)<(h :: H)>,(std/core/alloc :: H -> X)<(h :: H)>> = 1;
private alias sys/dom/types/dom :: E = <(std/core/exn :: X),(std/core/ndet :: X),(std/core/console :: X),(std/core/net :: X),(std/core/ui :: X),((std/core/st :: H -> E)<(sys/dom/types/hdom :: H)> == 1 <(std/core/read :: H -> X)<(sys/dom/types/hdom :: H)>,(std/core/write :: H -> X)<(sys/dom/types/hdom :: H)>,(std/core/alloc :: H -> X)<(sys/dom/types/hdom :: H)>>)> = 2;
private alias sys/dom/types/int32 = std/core/int = 1;
private alias sys/dom/types/uint16 = std/core/int = 1;
private alias sys/dom/types/uint32 = std/core/int = 1;
/* safe and unsafe conversion from all types including `any */
external maybeHtmlElement : forall<a> (a) -> (std/core/maybe :: V -> V)<sys/dom/types/htmlElement> = inline "(#1.tagName?std_core.Just(#1):std_core.Nothing)";
external toHtmlElement : forall<a> (a) -> <(std/core/exn :: X)> sys/dom/types/htmlElement = inline "(#1.tagName?#1:std_core.error('toHtmlElement: cast failed'))";
// HTMLElement implements HTMLElement (supplemental)
external getElementsByClassName : (this : sys/dom/types/htmlElement, classNames : std/core/string) -> (sys/dom/types/dom :: E) sys/dom/types/nodeList = inline "#1.getElementsByClassName(#2)";
external innerHtml : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.innerHTML";
external innerHtml .1 : (this : sys/dom/types/htmlElement, assigned : std/core/string) -> (sys/dom/types/dom :: E) () = inline "(#1.innerHTML = #2)";
external outerHtml : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.outerHTML";
external outerHtml .1 : (this : sys/dom/types/htmlElement, assigned : std/core/string) -> (sys/dom/types/dom :: E) () = inline "(#1.outerHTML = #2)";
external insertAdjacentHtml : (this : sys/dom/types/htmlElement, position : std/core/string, text : std/core/string) -> (sys/dom/types/dom :: E) () = inline "#1.insertAdjacentHTML(#2, #3)";
external id : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.id";
external id .1 : (this : sys/dom/types/htmlElement, assigned : std/core/string) -> (sys/dom/types/dom :: E) () = inline "(#1.id = #2)";
external title : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.title";
external title .1 : (this : sys/dom/types/htmlElement, assigned : std/core/string) -> (sys/dom/types/dom :: E) () = inline "(#1.title = #2)";
external lang : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.lang";
external lang .1 : (this : sys/dom/types/htmlElement, assigned : std/core/string) -> (sys/dom/types/dom :: E) () = inline "(#1.lang = #2)";
external dir : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.dir";
external dir .1 : (this : sys/dom/types/htmlElement, assigned : std/core/string) -> (sys/dom/types/dom :: E) () = inline "(#1.dir = #2)";
external className : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.className";
external className .1 : (this : sys/dom/types/htmlElement, assigned : std/core/string) -> (sys/dom/types/dom :: E) () = inline "(#1.className = #2)";
external classList : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/domTokenList = inline "#1.classList";
external dataset : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/domStringMap = inline "#1.dataset";
external itemScope : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) std/core/bool = inline "#1.itemScope";
external itemScope .1 : (this : sys/dom/types/htmlElement, assigned : std/core/bool) -> (sys/dom/types/dom :: E) () = inline "(#1.itemScope = #2)";
external itemType : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.itemType";
external itemType .1 : (this : sys/dom/types/htmlElement, assigned : std/core/string) -> (sys/dom/types/dom :: E) () = inline "(#1.itemType = #2)";
external itemId : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.itemId";
external itemId .1 : (this : sys/dom/types/htmlElement, assigned : std/core/string) -> (sys/dom/types/dom :: E) () = inline "(#1.itemId = #2)";
external itemRef : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/domSettableTokenList = inline "#1.itemRef";
external itemRef .1 : (this : sys/dom/types/htmlElement, assigned : sys/dom/types/domSettableTokenList) -> (sys/dom/types/dom :: E) () = inline "(#1.itemRef = #2)";
external itemProp : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/domSettableTokenList = inline "#1.itemProp";
external itemProp .1 : (this : sys/dom/types/htmlElement, assigned : sys/dom/types/domSettableTokenList) -> (sys/dom/types/dom :: E) () = inline "(#1.itemProp = #2)";
external properties : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/htmlPropertiesCollection = inline "#1.properties";
external hidden : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) std/core/bool = inline "#1.hidden";
external hidden .1 : (this : sys/dom/types/htmlElement, assigned : std/core/bool) -> (sys/dom/types/dom :: E) () = inline "(#1.hidden = #2)";
external click : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) () = inline "#1.click()";
external tabIndex : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/int32 = inline "#1.tabIndex";
external tabIndex .1 : (this : sys/dom/types/htmlElement, assigned : sys/dom/types/int32) -> (sys/dom/types/dom :: E) () = inline "(#1.tabIndex = #2)";
external focus : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) () = inline "#1.focus()";
external blur : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) () = inline "#1.blur()";
external accessKey : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.accessKey";
external accessKey .1 : (this : sys/dom/types/htmlElement, assigned : std/core/string) -> (sys/dom/types/dom :: E) () = inline "(#1.accessKey = #2)";
external accessKeyLabel : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.accessKeyLabel";
external draggable : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) std/core/bool = inline "#1.draggable";
external draggable .1 : (this : sys/dom/types/htmlElement, assigned : std/core/bool) -> (sys/dom/types/dom :: E) () = inline "(#1.draggable = #2)";
external dropzone : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/domSettableTokenList = inline "#1.dropzone";
external dropzone .1 : (this : sys/dom/types/htmlElement, assigned : sys/dom/types/domSettableTokenList) -> (sys/dom/types/dom :: E) () = inline "(#1.dropzone = #2)";
external contentEditable : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.contentEditable";
external contentEditable .1 : (this : sys/dom/types/htmlElement, assigned : std/core/string) -> (sys/dom/types/dom :: E) () = inline "(#1.contentEditable = #2)";
external isContentEditable : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) std/core/bool = inline "#1.isContentEditable";
external contextMenu : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/htmlMenuElement = inline "#1.contextMenu";
external contextMenu .1 : (this : sys/dom/types/htmlElement, assigned : sys/dom/types/htmlMenuElement) -> (sys/dom/types/dom :: E) () = inline "(#1.contextMenu = #2)";
external spellcheck : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) std/core/bool = inline "#1.spellcheck";
external spellcheck .1 : (this : sys/dom/types/htmlElement, assigned : std/core/bool) -> (sys/dom/types/dom :: E) () = inline "(#1.spellcheck = #2)";
external commandType : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.commandType";
external label : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.label";
external icon : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.icon";
external disabled : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) std/core/bool = inline "#1.disabled";
external checked : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) std/core/bool = inline "#1.checked";
external style : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/cssStyleDeclaration = inline "#1.style";
external onabort : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/uiEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onabort";
external onabort .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onabort = #2)";
external onabort .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/uiEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onabort = #2)";
external onblur : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/focusEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onblur";
external onblur .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onblur = #2)";
external onblur .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/focusEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onblur = #2)";
external oncanplay : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.oncanplay";
external oncanplay .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oncanplay = #2)";
external oncanplay .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oncanplay = #2)";
external oncanplaythrough : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.oncanplaythrough";
external oncanplaythrough .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oncanplaythrough = #2)";
external oncanplaythrough .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oncanplaythrough = #2)";
external onchange : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onchange";
external onchange .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onchange = #2)";
external onchange .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onchange = #2)";
external onclick : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/mouseEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onclick";
external onclick .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onclick = #2)";
external onclick .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/mouseEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onclick = #2)";
external oncontextmenu : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/mouseEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.oncontextmenu";
external oncontextmenu .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oncontextmenu = #2)";
external oncontextmenu .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/mouseEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oncontextmenu = #2)";
external oncuechange : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.oncuechange";
external oncuechange .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oncuechange = #2)";
external oncuechange .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oncuechange = #2)";
external ondblclick : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/mouseEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.ondblclick";
external ondblclick .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondblclick = #2)";
external ondblclick .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/mouseEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondblclick = #2)";
external ondrag : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/dragEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.ondrag";
external ondrag .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondrag = #2)";
external ondrag .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/dragEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondrag = #2)";
external ondragend : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/dragEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.ondragend";
external ondragend .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondragend = #2)";
external ondragend .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/dragEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondragend = #2)";
external ondragenter : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/dragEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.ondragenter";
external ondragenter .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondragenter = #2)";
external ondragenter .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/dragEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondragenter = #2)";
external ondragleave : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/dragEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.ondragleave";
external ondragleave .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondragleave = #2)";
external ondragleave .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/dragEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondragleave = #2)";
external ondragover : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/dragEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.ondragover";
external ondragover .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondragover = #2)";
external ondragover .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/dragEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondragover = #2)";
external ondragstart : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/dragEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.ondragstart";
external ondragstart .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondragstart = #2)";
external ondragstart .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/dragEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondragstart = #2)";
external ondrop : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/dragEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.ondrop";
external ondrop .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondrop = #2)";
external ondrop .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/dragEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondrop = #2)";
external ondurationchange : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.ondurationchange";
external ondurationchange .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondurationchange = #2)";
external ondurationchange .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ondurationchange = #2)";
external onemptied : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onemptied";
external onemptied .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onemptied = #2)";
external onemptied .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onemptied = #2)";
external onended : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onended";
external onended .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onended = #2)";
external onended .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onended = #2)";
external onerror : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onerror";
external onerror .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onerror = #2)";
external onerror .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onerror = #2)";
external onfocus : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/focusEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onfocus";
external onfocus .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onfocus = #2)";
external onfocus .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/focusEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onfocus = #2)";
external oninput : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.oninput";
external oninput .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oninput = #2)";
external oninput .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oninput = #2)";
external oninvalid : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.oninvalid";
external oninvalid .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oninvalid = #2)";
external oninvalid .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.oninvalid = #2)";
external onkeydown : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/keyboardEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onkeydown";
external onkeydown .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onkeydown = #2)";
external onkeydown .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/keyboardEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onkeydown = #2)";
external onkeypress : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/keyboardEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onkeypress";
external onkeypress .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onkeypress = #2)";
external onkeypress .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/keyboardEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onkeypress = #2)";
external onkeyup : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/keyboardEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onkeyup";
external onkeyup .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onkeyup = #2)";
external onkeyup .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/keyboardEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onkeyup = #2)";
external onload : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onload";
external onload .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onload = #2)";
external onload .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onload = #2)";
external onloadeddata : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onloadeddata";
external onloadeddata .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onloadeddata = #2)";
external onloadeddata .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onloadeddata = #2)";
external onloadedmetadata : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onloadedmetadata";
external onloadedmetadata .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onloadedmetadata = #2)";
external onloadedmetadata .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onloadedmetadata = #2)";
external onloadstart : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onloadstart";
external onloadstart .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onloadstart = #2)";
external onloadstart .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onloadstart = #2)";
external onmousedown : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/mouseEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onmousedown";
external onmousedown .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmousedown = #2)";
external onmousedown .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/mouseEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmousedown = #2)";
external onmousemove : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/mouseEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onmousemove";
external onmousemove .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmousemove = #2)";
external onmousemove .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/mouseEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmousemove = #2)";
external onmouseout : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/mouseEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onmouseout";
external onmouseout .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmouseout = #2)";
external onmouseout .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/mouseEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmouseout = #2)";
external onmouseover : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/mouseEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onmouseover";
external onmouseover .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmouseover = #2)";
external onmouseover .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/mouseEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmouseover = #2)";
external onmouseup : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/mouseEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onmouseup";
external onmouseup .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmouseup = #2)";
external onmouseup .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/mouseEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmouseup = #2)";
external onmousewheel : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/wheelEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onmousewheel";
external onmousewheel .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmousewheel = #2)";
external onmousewheel .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/wheelEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onmousewheel = #2)";
external onpause : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onpause";
external onpause .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onpause = #2)";
external onpause .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onpause = #2)";
external onplay : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onplay";
external onplay .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onplay = #2)";
external onplay .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onplay = #2)";
external onplaying : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onplaying";
external onplaying .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onplaying = #2)";
external onplaying .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onplaying = #2)";
external onprogress : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/progressEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onprogress";
external onprogress .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onprogress = #2)";
external onprogress .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/progressEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onprogress = #2)";
external onratechange : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onratechange";
external onratechange .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onratechange = #2)";
external onratechange .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onratechange = #2)";
external onreadystatechange : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onreadystatechange";
external onreadystatechange .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onreadystatechange = #2)";
external onreadystatechange .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onreadystatechange = #2)";
external onreset : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onreset";
external onreset .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onreset = #2)";
external onreset .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onreset = #2)";
external onscroll : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/uiEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onscroll";
external onscroll .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onscroll = #2)";
external onscroll .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/uiEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onscroll = #2)";
external onseeked : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onseeked";
external onseeked .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onseeked = #2)";
external onseeked .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onseeked = #2)";
external onseeking : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onseeking";
external onseeking .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onseeking = #2)";
external onseeking .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onseeking = #2)";
external onselect : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/uiEvent) -> (sys/dom/types/dom :: E) ()) = inline "#1.onselect";
external onselect .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onselect = #2)";
external onselect .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/uiEvent) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onselect = #2)";
external onshow : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onshow";
external onshow .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onshow = #2)";
external onshow .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onshow = #2)";
external onstalled : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onstalled";
external onstalled .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onstalled = #2)";
external onstalled .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onstalled = #2)";
external onsubmit : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onsubmit";
external onsubmit .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onsubmit = #2)";
external onsubmit .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onsubmit = #2)";
external onsuspend : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onsuspend";
external onsuspend .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onsuspend = #2)";
external onsuspend .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onsuspend = #2)";
external ontimeupdate : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.ontimeupdate";
external ontimeupdate .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ontimeupdate = #2)";
external ontimeupdate .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.ontimeupdate = #2)";
external onvolumechange : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onvolumechange";
external onvolumechange .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onvolumechange = #2)";
external onvolumechange .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onvolumechange = #2)";
external onwaiting : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) ((sys/dom/types/event) -> (sys/dom/types/dom :: E) ()) = inline "#1.onwaiting";
external onwaiting .1 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : () -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onwaiting = #2)";
external onwaiting .2 : forall<(e :: E)> (this : sys/dom/types/htmlElement, assigned : (sys/dom/types/event) -> <(sys/dom/types/dom :: E)|(e :: E)> ()) -> <(sys/dom/types/dom :: E)|(e :: E)> () = inline "(#1.onwaiting = #2)";
// HTMLElement implements HTMLElement (supplemental)
external offsetParent : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/element = inline "#1.offsetParent";
external offsetTop : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/int32 = inline "#1.offsetTop";
external offsetLeft : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/int32 = inline "#1.offsetLeft";
external offsetWidth : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/int32 = inline "#1.offsetWidth";
external offsetHeight : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/int32 = inline "#1.offsetHeight";
// HTMLElement extends Element
external element : (sys/dom/types/htmlElement) -> sys/dom/types/element = inline "#1";
// HTMLElement implements in extension Element (overloading)
external namespaceUri : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.namespaceURI";
external prefix_ : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.prefix";
external localName : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.localName";
external tagName : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.tagName";
external attributes : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) (std/core/list :: V -> V)<sys/dom/types/attr> = inline "std_core.alert('attributes: not implemented')";
external getAttribute : (this : sys/dom/types/htmlElement, qualifiedName : std/core/string) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.getAttribute(#2)";
external getAttributeNs : (this : sys/dom/types/htmlElement, namespace : std/core/string, localName : std/core/string) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.getAttributeNS(#2, #3)";
external setAttribute : (this : sys/dom/types/htmlElement, qualifiedName : std/core/string, value : std/core/string) -> (sys/dom/types/dom :: E) () = inline "#1.setAttribute(#2, #3)";
external setAttributeNs : (this : sys/dom/types/htmlElement, namespace : std/core/string, qualifiedName : std/core/string, value : std/core/string) -> (sys/dom/types/dom :: E) () = inline "#1.setAttributeNS(#2, #3, #4)";
external removeAttribute : (this : sys/dom/types/htmlElement, qualifiedName : std/core/string) -> (sys/dom/types/dom :: E) () = inline "#1.removeAttribute(#2)";
external removeAttributeNs : (this : sys/dom/types/htmlElement, namespace : std/core/string, localName : std/core/string) -> (sys/dom/types/dom :: E) () = inline "#1.removeAttributeNS(#2, #3)";
external hasAttribute : (this : sys/dom/types/htmlElement, qualifiedName : std/core/string) -> (sys/dom/types/dom :: E) std/core/bool = inline "#1.hasAttribute(#2)";
external hasAttributeNs : (this : sys/dom/types/htmlElement, namespace : std/core/string, localName : std/core/string) -> (sys/dom/types/dom :: E) std/core/bool = inline "#1.hasAttributeNS(#2, #3)";
external getElementsByTagName : (this : sys/dom/types/htmlElement, qualifiedName : std/core/string) -> (sys/dom/types/dom :: E) sys/dom/types/nodeList = inline "#1.getElementsByTagName(#2)";
external getElementsByTagNameNs : (this : sys/dom/types/htmlElement, namespace : std/core/string, localName : std/core/string) -> (sys/dom/types/dom :: E) sys/dom/types/nodeList = inline "#1.getElementsByTagNameNS(#2, #3)";
external getElementsByClassName .1 : (this : sys/dom/types/htmlElement, classNames : std/core/string) -> (sys/dom/types/dom :: E) sys/dom/types/nodeList = inline "#1.getElementsByClassName(#2)";
external children : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/htmlCollection = inline "#1.children";
external firstElementChild : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/element = inline "#1.firstElementChild";
external lastElementChild : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/element = inline "#1.lastElementChild";
external previousElementSibling : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/element = inline "#1.previousElementSibling";
external nextElementSibling : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/element = inline "#1.nextElementSibling";
external childElementCount : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/uint32 = inline "#1.childElementCount";
// HTMLElement implements in extension Element (overloading)
external getClientRects : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/clientRectList = inline "#1.getClientRects()";
external getBoundingClientRect : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/clientRect = inline "#1.getBoundingClientRect()";
external scrollIntoView : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) () = inline "#1.scrollIntoView()";
external scrollIntoView .1 : (this : sys/dom/types/htmlElement, top : std/core/bool) -> (sys/dom/types/dom :: E) () = inline "#1.scrollIntoView(#2)";
external scrollTop : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/int32 = inline "#1.scrollTop";
external scrollTop .1 : (this : sys/dom/types/htmlElement, assigned : sys/dom/types/int32) -> (sys/dom/types/dom :: E) () = inline "(#1.scrollTop = #2)";
external scrollLeft : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/int32 = inline "#1.scrollLeft";
external scrollLeft .1 : (this : sys/dom/types/htmlElement, assigned : sys/dom/types/int32) -> (sys/dom/types/dom :: E) () = inline "(#1.scrollLeft = #2)";
external scrollWidth : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/int32 = inline "#1.scrollWidth";
external scrollHeight : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/int32 = inline "#1.scrollHeight";
external clientTop : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/int32 = inline "#1.clientTop";
external clientLeft : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/int32 = inline "#1.clientLeft";
external clientWidth : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/int32 = inline "#1.clientWidth";
external clientHeight : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/int32 = inline "#1.clientHeight";
// HTMLElement implements in extension NodeSelector (overloading)
external querySelector : (this : sys/dom/types/htmlElement, selectors : std/core/string) -> (sys/dom/types/dom :: E) sys/dom/types/element = inline "#1.querySelector(#2)";
external querySelectorAll : (this : sys/dom/types/htmlElement, selectors : std/core/string) -> (sys/dom/types/dom :: E) sys/dom/types/nodeList = inline "#1.querySelectorAll(#2)";
// HTMLElement extends Node
external node : (sys/dom/types/htmlElement) -> sys/dom/types/node = inline "#1";
// HTMLElement implements in extension Node (overloading)
external nodeType : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/nodeType = inline "#1.nodeType";
external nodeName : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.nodeName";
external baseUri : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.baseURI";
external ownerDocument : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/document = inline "#1.ownerDocument";
external parentNode : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/node = inline "#1.parentNode";
external parentElement : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/element = inline "#1.parentElement";
external hasChildNodes : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) std/core/bool = inline "#1.hasChildNodes()";
external childNodes : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/nodeList = inline "#1.childNodes";
external firstChild : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/node = inline "#1.firstChild";
external lastChild : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/node = inline "#1.lastChild";
external previousSibling : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/node = inline "#1.previousSibling";
external nextSibling : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) sys/dom/types/node = inline "#1.nextSibling";
external compareDocumentPosition : (this : sys/dom/types/htmlElement, other : sys/dom/types/node) -> (sys/dom/types/dom :: E) sys/dom/types/uint16 = inline "#1.compareDocumentPosition(#2)";
external nodeValue : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.nodeValue";
external nodeValue .1 : (this : sys/dom/types/htmlElement, assigned : std/core/string) -> (sys/dom/types/dom :: E) () = inline "(#1.nodeValue = #2)";
external textContent : (this : sys/dom/types/htmlElement) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.textContent";
external textContent .1 : (this : sys/dom/types/htmlElement, assigned : std/core/string) -> (sys/dom/types/dom :: E) () = inline "(#1.textContent = #2)";
external insertBefore : (this : sys/dom/types/htmlElement, newChild : sys/dom/types/node, refChild : sys/dom/types/node) -> (sys/dom/types/dom :: E) sys/dom/types/node = inline "#1.insertBefore(#2, #3)";
external replaceChild : (this : sys/dom/types/htmlElement, newChild : sys/dom/types/node, oldChild : sys/dom/types/node) -> (sys/dom/types/dom :: E) sys/dom/types/node = inline "#1.replaceChild(#2, #3)";
external removeChild : (this : sys/dom/types/htmlElement, oldChild : sys/dom/types/node) -> (sys/dom/types/dom :: E) sys/dom/types/node = inline "#1.removeChild(#2)";
external appendChild : (this : sys/dom/types/htmlElement, newChild : sys/dom/types/node) -> (sys/dom/types/dom :: E) sys/dom/types/node = inline "#1.appendChild(#2)";
external cloneNode : (this : sys/dom/types/htmlElement, deep : std/core/bool) -> (sys/dom/types/dom :: E) sys/dom/types/node = inline "#1.cloneNode(#2)";
external isSameNode : (this : sys/dom/types/htmlElement, node : sys/dom/types/node) -> (sys/dom/types/dom :: E) std/core/bool = inline "#1.isSameNode(#2)";
external isEqualNode : (this : sys/dom/types/htmlElement, node : sys/dom/types/node) -> (sys/dom/types/dom :: E) std/core/bool = inline "#1.isEqualNode(#2)";
external lookupPrefix : (this : sys/dom/types/htmlElement, namespace : std/core/string) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.lookupPrefix(#2)";
external lookupNamespaceUri : (this : sys/dom/types/htmlElement, prefix_ : std/core/string) -> (sys/dom/types/dom :: E) std/core/string = inline "#1.lookupNamespaceURI(#2)";
external isDefaultNamespace : (this : sys/dom/types/htmlElement, namespace : std/core/string) -> (sys/dom/types/dom :: E) std/core/bool = inline "#1.isDefaultNamespace(#2)";
// HTMLElement extends EventTarget
external eventTarget : (sys/dom/types/htmlElement) -> sys/dom/types/eventTarget = inline "#1";
// HTMLElement implements in extension EventTarget (overloading)
external addEventListener : (this : sys/dom/types/htmlElement, type_ : std/core/string, listener : sys/dom/types/eventListener) -> (sys/dom/types/dom :: E) () = inline "#1.addEventListener(#2, #3)";
external addEventListener .1 : (this : sys/dom/types/htmlElement, type_ : std/core/string, listener : sys/dom/types/eventListener, capture : std/core/bool) -> (sys/dom/types/dom :: E) () = inline "#1.addEventListener(#2, #3, #4)";
external removeEventListener : (this : sys/dom/types/htmlElement, type_ : std/core/string, listener : sys/dom/types/eventListener) -> (sys/dom/types/dom :: E) () = inline "#1.removeEventListener(#2, #3)";
external removeEventListener .1 : (this : sys/dom/types/htmlElement, type_ : std/core/string, listener : sys/dom/types/eventListener, capture : std/core/bool) -> (sys/dom/types/dom :: E) () = inline "#1.removeEventListener(#2, #3, #4)";
external dispatchEvent : (this : sys/dom/types/htmlElement, event : sys/dom/types/event) -> (sys/dom/types/dom :: E) std/core/bool = inline "#1.dispatchEvent(#2)";